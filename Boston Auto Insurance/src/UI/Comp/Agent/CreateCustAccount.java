/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Comp.Agent;

import Main.TheBostonInsuranceModel;
import Model.Account.Account;
import Model.Account.AccountCredentials;
import Model.Account.AccountCredentialsDirectory;
import Model.Account.AccountDirectory;
import Model.Customer.Customer;
import Model.Customer.CustomerDirectory;
import java.awt.CardLayout;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeFormatterBuilder;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Linata04
 */
public class CreateCustAccount extends javax.swing.JPanel {

    /**
     * Creates new form CreateCustAccount_
     */
    private TheBostonInsuranceModel BIM;
    private JPanel workPanel;
    private CustomerDirectory customerDirectory;
    private AccountCredentialsDirectory accountCredentialsDirectory;
    private AccountDirectory accountDirectory;

    public CreateCustAccount(TheBostonInsuranceModel BIM, JPanel workPanel) {
        initComponents();
        this.BIM = BIM;
        this.workPanel = workPanel;
        this.customerDirectory = BIM.getCustomerDirectory();
        this.accountCredentialsDirectory = BIM.getAccountCredentialsDirectory();
        this.accountDirectory = BIM.getAccountDirectory();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblFName = new javax.swing.JLabel();
        txtFName = new javax.swing.JTextField();
        lblLName = new javax.swing.JLabel();
        txtLName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        lblUserPassword = new javax.swing.JLabel();
        lblStreetAdd = new javax.swing.JLabel();
        txtStreetAdd = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblZip = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        txtDob = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnCreateAcc = new javax.swing.JButton();
        btnCreateAcc1 = new javax.swing.JButton();
        txtUserPassword = new javax.swing.JPasswordField();

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/topLogo.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("                              Enter Details for Account Creation");

        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Customer Details");

        lblFName.setText("First Name");

        txtFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFNameActionPerformed(evt);
            }
        });

        lblLName.setText("Last Name");

        lblEmail.setText("Email ID");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblUserName.setText("User Name");

        txtUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameActionPerformed(evt);
            }
        });

        lblUserPassword.setText("Enter Password");

        lblStreetAdd.setText("Street Address");

        lblCity.setText("City");

        lblState.setText("State");

        lblZip.setText("Zip Code");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        lblDob.setText("Date of Birth");

        lblPhone.setText("Phone");

        btnCreateAcc.setBackground(new java.awt.Color(204, 204, 204));
        btnCreateAcc.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateAcc.setForeground(new java.awt.Color(153, 0, 0));
        btnCreateAcc.setText("Create Account");
        btnCreateAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccActionPerformed(evt);
            }
        });

        btnCreateAcc1.setBackground(new java.awt.Color(204, 204, 204));
        btnCreateAcc1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateAcc1.setForeground(new java.awt.Color(153, 0, 0));
        btnCreateAcc1.setText("< back");
        btnCreateAcc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAcc1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(89, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCreateAcc)
                            .addComponent(btnCreateAcc1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)
                                    .addComponent(txtZip, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPhone, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDob, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDob, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblStreetAdd, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblUserPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtStreetAdd, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblFName))
                                    .addGap(30, 30, 30)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblLName)
                                        .addComponent(txtLName)))
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblCity)
                                    .addGap(196, 196, 196)
                                    .addComponent(lblState)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblZip)
                                    .addGap(40, 40, 40))))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnCreateAcc1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFName)
                    .addComponent(lblLName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUserName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblStreetAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStreetAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(lblState)
                    .addComponent(lblZip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDob)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPhone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUserPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreateAcc)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void btnCreateAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccActionPerformed
        // TODO add your handling code here:
        String FName = txtFName.getText();
        String LName = txtLName.getText();
        String Email = txtEmail.getText();
        String UserName = txtUserName.getText();
        String StreetAdd = txtStreetAdd.getText();
        String City = txtCity.getText();
        String State = txtState.getText();
        String Zipcode = txtZip.getText();
        String Dob = txtDob.getText();
        String Phone = txtPhone.getText();
        String Password = txtUserPassword.getText();
// Validate First Name
        if (FName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "First Name is empty. Please enter a valid First Name.");
            return;
        } else if (!FName.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Invalid First Name. Please enter only alphabets.");
            return;
        }

// Validate Last Name
        if (LName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Last Name is empty. Please enter a valid Last Name.");
            return;
        } else if (!LName.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Invalid Last Name. Please enter only alphabets.");
            return;
        }

// Validate Email
        if (Email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email is empty. Please enter a valid Email.");
            return;
        } else if (!Email.matches("[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}")) {
            JOptionPane.showMessageDialog(this, "Invalid Email. Please enter a valid email address.");
            return;
        }

// Validate UserName
        if (UserName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "UserName is empty. Please enter a UserName.");
            return;
        }

// Validate Street Address
        if (StreetAdd.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Address is empty. Please enter a Address.");
            return;
        }

// Validate City
        if (City.isEmpty()) {
            JOptionPane.showMessageDialog(this, "City is empty. Please enter a City.");
            return;
        }

// Validate State
        if (State.isEmpty()) {
            JOptionPane.showMessageDialog(this, "State is empty. Please enter a State.");
            return;
        }

// Check if the State is a two-letter uppercase abbreviation
        if (!State.matches("^[A-Z]{2}$")) {
            JOptionPane.showMessageDialog(this, "Invalid State. Please enter a valid two-letter uppercase abbreviation (e.g., MA, NY).");
            return;
        }

// Validate Zipcode
        if (Zipcode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Zipcode is empty. Please enter a valid Zipcode.");
            return;
        } else if (!Zipcode.matches("\\d{5}")) {
            JOptionPane.showMessageDialog(this, "Invalid Zipcode. Please enter a 5-digit number.");
            return;
        }

// Validate Date of Birth
        if (Dob.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Date of Birth is empty. Please enter a valid Date of Birth.");
            return;
        }
        try {
            DateTimeFormatter formatter = new DateTimeFormatterBuilder()
                    .appendOptional(DateTimeFormatter.ofPattern("M/d/yyyy"))
                    .appendOptional(DateTimeFormatter.ofPattern("MM/dd/yyyy"))
                    .toFormatter();

            LocalDate dob = LocalDate.parse(Dob, formatter);

            if (dob.isAfter(LocalDate.now())) {
                JOptionPane.showMessageDialog(this, "Invalid Date of Birth. Please enter a date before today.");
                return;
            }

            // Check if the person is above 18 years old
            LocalDate eighteenYearsAgo = LocalDate.now().minusYears(18);
            if (dob.isAfter(eighteenYearsAgo)) {
                JOptionPane.showMessageDialog(this, "Person should be at least 18 years old. Please enter a valid Date of Birth.");
                return;
            }

        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth. Please enter a valid date (M/d/yyyy or MM/dd/yyyy).");
            return;
        }

// Validate Phone Number
        if (Phone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phone Number is empty. Please enter a valid Phone Number.");
            return;
        } else if (!Phone.matches("\\d{10}")) {
            JOptionPane.showMessageDialog(this, "Invalid Phone Number. Please enter a 10-digit number.");
            return;
        }

// Validate Password
        if (Password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password is empty. Please enter a valid Password.");
            return;
        } else if (!Password.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$")) {
            JOptionPane.showMessageDialog(this, "Invalid Password. It should have at least 8 characters, one uppercase letter, one lowercase letter, one digit, and one special character.");
            return;
        }

// Continue with account creation if all validations pass
        Customer newCustomer = customerDirectory.createCustomer(FName, LName, Email, StreetAdd, City, State, Zipcode, Dob, Phone);
        Account newCustAC = newCustomer.getAccount(); //get associated account

// Creating logins for accounts
        AccountCredentials newCustACC = accountCredentialsDirectory.addAccountCredentials(newCustAC, UserName, Password);

// Assigning the credentials in the account class
        newCustAC.setUserAccountCredentials(newCustACC);

// Adding account to account directory
        accountDirectory.addAccount(newCustAC);

        JOptionPane.showMessageDialog(this, "Customer Account has created successfully");
        emptyFields();

    }//GEN-LAST:event_btnCreateAccActionPerformed

    private void btnCreateAcc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAcc1ActionPerformed
        // TODO add your handling code here:
        workPanel.remove(this);
        CardLayout layout = (CardLayout) workPanel.getLayout();
        layout.previous(workPanel);
    }//GEN-LAST:event_btnCreateAcc1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAcc;
    private javax.swing.JButton btnCreateAcc1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFName;
    private javax.swing.JLabel lblLName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreetAdd;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserPassword;
    private javax.swing.JLabel lblZip;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreetAdd;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JPasswordField txtUserPassword;
    private javax.swing.JTextField txtZip;
    // End of variables declaration//GEN-END:variables

    private void emptyFields() {
        txtFName.setText("");
        txtLName.setText("");
        txtEmail.setText("");
        txtUserName.setText("");
        txtStreetAdd.setText("");
        txtCity.setText("");
        txtState.setText("");
        txtZip.setText("");
        txtDob.setText("");
        txtPhone.setText("");
        txtUserPassword.setText("");
    }
}
